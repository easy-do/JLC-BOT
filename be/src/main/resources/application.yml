
server:
  port: 8888
  compression:
    enabled: true
    min-response-size: 2048
    mime-types: application/javascript,application/json,application/xml,text/html,text/xml,text/plain,text/css,image/*,text/javascript

spring:
  application:
    name: jlc-bot
  servlet:
    multipart:
      #限制报文大小，post请求大小限制,undertow里的设置不会生效
      max-request-size: 1000MB
      max-file-size: 1000MB
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  web:
    resources:
      static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/webapp/,./static/
  liquibase:
    enabled: true
    databaseChangeLogTable: "jlc_bot_database_change_log"
    databaseChangeLogLockTable: "jlc_bot_database_change_log_lock"
  # 定时器配置
  quartz:
    # 使用数据库存储
    job-store-type: memory
    # 初始化完成后自动启动调度程序
    autoStartup: true
    properties:
      org:
        quartz:
          # 调度器配置
          scheduler:
            instanceName: bootQuartzScheduler
            instanceId: AUTO
          # 线程池配置
          threadPool:
            threadNamePrefix: Boot_Job_Pool
            threadPriority: 5
            threadCount: 10
            class: org.quartz.simpl.SimpleThreadPool

mybatis-flex:
  datasource:
    jlc_bot:
      type: druid
      url: jdbc:h2:file:${H2DB:./data/db/jlc_bot};MODE=MySQL
      username: jlc_bot
      password: jlc_bot
      driver-class-name: org.h2.Driver
#    jlc_bot:
#      type: druid
#      url: jdbc:mysql://${MYSQL_HOST:dnfmysql}:${MYSQL_PORT:3306}/jlc_bot?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
#      username: ${MYSQL_USER:root}
#      password: ${MYSQL_PASS:88888888}

jcl:
  current-version: 2024.04.19
  wcf-enable: ${WCF_ENABLE:false} # wcf开关，使用wcf客户端模式hook本地微信则设置为 true
  mode: ${MODE:default}

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # jwt秘钥
  jwt-secret-key: ${random.uuid}
  # token 名称（同时也是 cookie 名称）
  token-name: Authorization
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 36000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: tik
  # 是否输出操作日志
  is-log: true

management:
  server:
    port: 0
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: plus.easydo.bot.controller
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn

liteflow:
  print-execution-log: true #关闭打印日志
  parse-mode: PARSE_ONE_ON_FIRST_EXEC
  rule-source-ext-data-map:
    type: druid
    url: jdbc:h2:file:${H2DB:./data/db/jlc_bot};MODE=MySQL
    username: jlc_bot
    password: jlc_bot
    driverClassName: org.h2.Driver
#    url: jdbc:mysql://${MYSQL_HOST:dnfmysql}:${MYSQL_PORT:3306}/jlc_bot?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
#    driverClassName: com.mysql.cj.jdbc.Driver
#    username: ${MYSQL_USER:root}
#    password: ${MYSQL_PASS:88888888}
    applicationName: ${spring.application.name}
    #以下是chain表的配置，这个一定得有
    chainTableName: liteflow_chain
    chainApplicationNameField: application_name
    chainNameField: chain_name
    elDataField: el_data
    chainEnableField: enable
    #以下是script表的配置，如果你没使用到脚本，下面可以不配置
    scriptTableName: liteflow_script
    scriptApplicationNameField: application_name
    scriptIdField: script_id
    scriptNameField: script_name
    scriptDataField: script_data
    scriptTypeField: script_type
    scriptLanguageField: script_language
    scriptEnableField: enable
    #以下是轮询机制的配置
    pollingEnabled: false
    pollingStartSeconds: 0
    pollingIntervalSeconds: 5

logging:
  level:
    root: info  #debug
    plus.easydo: info  #debug
